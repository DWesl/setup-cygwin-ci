# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: windows-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Install Cygwin
        # You may pin to the exact commit or the version.
        # uses: egor-tensin/setup-cygwin@4f96f9fecb8c952fa32ff791b0a77d93d5191bb4
        uses: egor-tensin/setup-cygwin@v3
        with:
          # Target platform
          platform: x64 # optional, default is x64
          # Installation directory
          install-dir: C:\tools\cygwin # optional, default is C:\tools\cygwin
          # Packages to install, separated by a space
          packages: dash gcc-core gcc-fortran automake libtool python38-cython python38-devel python38-tox python38-virtualenv python38-distlib python38-numpy git
          # Value to set as the CYGWIN environment variable
          env: # optional
          # Convert symlinks in /usr/bin to hardlinks
          hardlinks: 0 # optional, default is 0
    
    # Runs a single command using the runners shell
      - name: Run a one-line script
        run: dash -c "echo Hello, world!"

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          dash -c "echo Add other actions to build,"
          dash -c "echo test, and deploy your project."
          dash -c "uname -o"
          
      - name: Run git fetch
        run: |
          dash -c "which git"
          dash -c "/usr/bin/git fetch --all -p"

      - name: Run autoreconf
        run: |
          dash -c "mkdir m4"
          dash -c "dash /usr/bin/autoreconf --force --install"

      - name: Configure
        run: |
          dash ./configure -C

      - name: Compile
        run: |
          dash -c "make -j4 all"
          cygcheck ./hello.exe

      - name: Run the test program
        run: dash -c "./hello.exe"

      - name: Run Autotools distcheck
        run: |
          dash -c "make distcheck"

      - name: Compile Cython extension module
        run: |
          dash -c "cythonize3.8 --force -3 --build --inplace src/one_plus.pyx"
          dash -c "ls -l src/"
          dash -c "cygcheck src/one_plus*.dll"

      - name: Attempt to import the extension module
        env:
          PYTHONPATH: src
        run: |
          dash -c "python3.8 -c 'import one_plus; print([one_plus.one_plus(i) for i in range(10)])'"

      - name: Run tests in tox
        run: |
          dash -c "tox3.8"
